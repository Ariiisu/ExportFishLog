# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(ExportFishLog)

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
	if(POLICY CMP0135)
		cmake_policy(SET CMP0135 NEW)
	endif()
	message(STATUS "Fetching vcpkg (2023.08.09)...")
	FetchContent_Declare(vcpkg URL "https://github.com/microsoft/vcpkg/archive/refs/tags/2023.08.09.tar.gz")
	FetchContent_GetProperties(vcpkg)
	if(NOT vcpkg_POPULATED)
		FetchContent_Populate(vcpkg)
		include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
	endif()
endif()

include(FetchContent)

message(STATUS "Fetching tomlplusplus (dbc4bcecf20b7c45fe9d39ca2aa4b28c35e4e83a)...")
FetchContent_Declare(tomlplusplus SYSTEM
	GIT_REPOSITORY
		"https://github.com/marzer/tomlplusplus"
	GIT_TAG
		dbc4bcecf20b7c45fe9d39ca2aa4b28c35e4e83a
)
FetchContent_MakeAvailable(tomlplusplus)

# Packages
find_package(fmt REQUIRED)

find_package(cpr REQUIRED)

# Target: ExportFishLog
set(ExportFishLog_SOURCES
	"src/data/config.cpp"
	"src/data/game.cpp"
	"src/data/network.cpp"
	"src/main.cpp"
	"src/memory/pattern.cpp"
	"src/memory/process.cpp"
	"src/data/csv.hpp"
	"src/data/config.h"
	"src/data/game.h"
	"src/data/network.h"
	"src/memory/pattern.h"
	"src/memory/process.h"
	cmake.toml
)

add_executable(ExportFishLog)

target_sources(ExportFishLog PRIVATE ${ExportFishLog_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${ExportFishLog_SOURCES})

target_compile_features(ExportFishLog PRIVATE
	cxx_std_23
)

if(MSVC) # msvc
	target_compile_options(ExportFishLog PRIVATE
		"/permissive-"
		"/w14640"
		"/EHsc"
		"/MP"
	)
endif()

target_link_libraries(ExportFishLog PRIVATE
	tomlplusplus::tomlplusplus
	fmt::fmt
	cpr::cpr
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ExportFishLog)
endif()

